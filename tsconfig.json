{
  "compilerOptions": {
    "target": "ES2015",                     /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    "module": "ESNext",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    // "lib": [],                              /* Specify library files to be included in the compilation. */
    "allowJs": true,
    "jsx": "react",                         /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "declaration": false,                   /* Generates corresponding '.d.ts' file. */
    "declarationMap": false,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
    "sourceMap": true,                      /* Generates corresponding '.map' file. */
    "outDir": "./dist",
    "rootDir": "./src",
    "removeComments": false,                /* Do not emit comments to output. */
    "noEmit": false,                         /* Do not emit outputs. */
    "downlevelIteration": true,             /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    "isolatedModules": false,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    "strict": true, 
    "noImplicitAny": false,                 /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,               /* Enable strict null checks. */
    "strictFunctionTypes": true,            /* Enable strict checking of function types. */
    "alwaysStrict": true,                   /* Parse in strict mode and emit "use strict" for each source file. */
    "allowUnreachableCode": false,
    "noUnusedLocals": false,                /* Report errors on unused locals. */
    "noUnusedParameters": false,            /* Report errors on unused parameters. */
    "noImplicitReturns": true,              /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,     /* Report errors for fallthrough cases in switch statement. */
    "moduleResolution": "node",
    "allowSyntheticDefaultImports": true,   /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "resolveJsonModule": true,
    "forceConsistentCasingInFileNames": true,
		"importHelpers": true,
    "skipLibCheck": true,  
    "experimentalDecorators": true,         /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true,          /* Enables experimental support for emitting type metadata for decorators. */
    "plugins": [
      { 
        "name": "typescript-plugin-css-modules",
        "options": {
          "classnameTransform": "camelCaseOnly",
          "customMatcher": "\\.module\\.(c|le|sa|sc)ss$"
        }
      },
      {
        "name": "typescript-tslint-plugin",
        "alwaysShowRuleFailuresAsWarnings": true,
        "ignoreDefinitionFiles": true,
        "configFile": "./tslint.json",
        "suppressWhileTypeErrorsPresent": false
      }
    ]
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    ".vscode",
    "lib", 
    "tests",
    "webpack",
    "public",
    "dist",
    "ssl"
  ]
}