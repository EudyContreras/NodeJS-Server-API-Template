!function(e){var t={};function n(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(s,a,function(t){return e[t]}.bind(null,a));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="../../build/public/",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const s={DATA_CACHE:"eudcon-universal-data-cache",IMAGE_CACHE:"eudcon-universal-image-cache",STATIC_CACHE:"eudcon-universal-static-cache",FALLBACK_CACHE:"eudcon-universal-fallback-cache"},a={INITIAL_SYNC:"initial-sync",UPDATE_SYNC:"update-sync",CONTENT_SYNC:"content-sync"},c={HTML:"text/html",SVG:"image/svg+xml",IMAGE:"image/png",FONT:""},r={title:"Template engine",options:{requireInteraction:!0,body:"There is update available! Would you like to see it?",icon:"../static/images/icons/icon-152x152.png",badge:"../static/images/icons/icon-152x152.png",actions:[{title:"yes",action:"action-1"},{title:"no",action:"action-2"}]}},i=Object.freeze({CACHE_ONLY:"cache_only_stragedy",CACHE_FIRST:"cache_first_stragedy",CACHE_THEN_PRELOAD:"cache_then_preload_stragedy",NETWORK_ONLY:"network_only_stragedy",NETWORK_FIRST:"network_first_stragedy",STALE_REVALIDATE:"stale_revalidate_stragedy",UPDATE_REFRESH:"update_refresh_stragedy",NON_FOUND:"no_found_stragedy"}),o=Object.freeze({push:{NEW_UPDATE:"new-update"},http:{PUT:"PUT",POST:"POST",DELETE:"DELETE",PATCH:"PATCH"},events:{SYNC:"sync",PERIODIC_SYNC:"periodicsync",NOTIFY_CLICK:"notificationclick",INSTALL:"install",ACTIVATE:"activate",MESSAGE:"message",FETCH:"fetch",PUSH:"push"},baseUrl:"/",urlsToCache:["","https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js","https://fonts.googleapis.com/css?family=Roboto&display=optional","https://fonts.gstatic.com/s/materialicons/v48/flUhRq6tzZclQEJ-Vdg-IuiaDsNcIhQ8tQ.woff2"],stragedies:i,messages:{REFRESH:"refresh",APP_UPDATE:"add_update",READ_OFFLINE:"read_offline",SKIP_WAITING:"skip_awaitng",ADD_TO_CACHE:"add_to_cache",REMOVE_FROM_CACHE:"remove_from_cache"},cacheKeys:s,syncEvents:a,contentTypes:c,offlineFallbackPage:"/offline.html",updateNotification:r});importScripts("/manifest-precache.9767f94d116a647df0eeb66e70cff03a.js","https://storage.googleapis.com/workbox-cdn/releases/4.3.1/workbox-sw.js");var l=function(e,t,n,s){return new(n||(n=Promise))((function(a,c){function r(e){try{o(s.next(e))}catch(t){c(t)}}function i(e){try{o(s.throw(e))}catch(t){c(t)}}function o(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,i)}o((s=s.apply(e,t||[])).next())}))};self.__WB_MANIFEST;const h=(...e)=>{},d=(...e)=>{},u=(e=c.HTML)=>{switch(e){case c.IMAGE:return Promise.resolve(new Response(s.FALLBACK_CACHE,{headers:{"Content-Type":"image/svg+xml"}}))}},f=e=>e.status>=200&&e.status<300||0===e.status?e:(d(e.statusText),new Response(null)),p=(e,t=s.DATA_CACHE)=>fetch(e).then(n=>{if(!n.ok)throw new Error("Network error");return caches.open(t).then(t=>(t.put(e,n.clone()),n)).then(e=>e)}),E=e=>e.json().then(t=>(self.clients.matchAll().then(n=>{n.forEach(n=>{n.postMessage(JSON.stringify({type:o.messages.APP_UPDATE,data:{url:e.url,payload:t.content}}))})}),t.content)),C=({event:e,request:t,cache:n,stragedy:a=o.stragedies.CACHE_FIRST,contentType:r=c.HTML})=>{switch(a){case o.stragedies.CACHE_ONLY:return n.match(t).then(()=>u(r));case o.stragedies.NETWORK_ONLY:return fetch(t).then(()=>u(r));case o.stragedies.CACHE_FIRST:return n.match(t).then(s=>s||fetch(t).then(s=>(e.waitUntil(n.put(t,s.clone())),s)).catch(()=>n.match("/offline.html")));case o.stragedies.NETWORK_FIRST:return fetch(t).then(f).then(e=>(n.put(t,e.clone()),e)).catch(()=>n.match(t).then(e=>e||((e=c.HTML)=>l(void 0,void 0,void 0,(function*(){switch(e){case c.HTML:return(yield caches.open(s.FALLBACK_CACHE)).match("/offline.html")}})))()));case o.stragedies.STALE_REVALIDATE:return n.match(t).then(e=>{const s=fetch(t).then(e=>(n.put(t,e.clone()),e));return e||s||u()});case o.stragedies.UPDATE_REFRESH:return n.match(t).then(e=>new Response(e.body)).catch(()=>fetch(t).then(e=>(n.put(t,e.clone()),e)).catch(()=>{const e=JSON.stringify({error:"ServiceWorker: Sorry, you are offline. Please, try later."});return new Response(e,{status:404,statusText:"Not Found",headers:{"Content-Type":"application/json"}})}));case o.stragedies.CACHE_THEN_PRELOAD:return caches.match(t).then(s=>s||e.preloadResponse.then(e=>e||fetch(t).then(e=>(n.put(t,e.clone()),e)).catch(()=>u())));case o.stragedies.NON_FOUND:return fetch(t).catch(()=>{const e=JSON.stringify({error:"ServiceWorker: Sorry, you are offline. Please, try later."});return new Response(e,{status:404,statusText:"Not Found",headers:{"Content-Type":"application/json"}})})}};self.addEventListener(o.events.INSTALL,e=>{h("Installed:",e),e.waitUntil(caches.open(s.STATIC_CACHE).then(e=>{const t=(self.__WB_MANIFEST||self.__precacheManifest).map(e=>e.url);return e.addAll([...o.urlsToCache,...t])}).then(()=>self.skipWaiting()).catch(e=>h(e)))}),self.addEventListener(o.events.ACTIVATE,e=>{h("Activated:",e);const t=[s.STATIC_CACHE,s.DATA_CACHE,s.IMAGE_CACHE];return e.waitUntil(caches.keys().then(e=>e.filter(e=>!t.includes(e))).then(e=>Promise.all(e.map(e=>(h("Deleting cache "+e),caches.delete(e)))))),self.clients.claim()}),self.addEventListener(o.events.FETCH,e=>{const t=e.request.clone();if(0!==t.url.indexOf("http"))return;if((e=>[...Object.values(o.http)].includes(e.method)||"GET"!=e.method)(t))return void e.respondWith(C({event:e,request:t,stragedy:o.stragedies.NON_FOUND}));if((e=>e.url.includes("/api/"))(t)){const n=caches.open(s.DATA_CACHE);return e.respondWith(n.then(n=>C({event:e,request:t,cache:n,stragedy:o.stragedies.UPDATE_REFRESH}))),void e.waitUntil(p(t).then(E))}if((e=>/.(png|svg|json|jpg|jpeg|gif|ico|css|js)$/.test(e.url))(t)){const n=caches.open(s.STATIC_CACHE);return void e.respondWith(n.then(n=>C({event:e,request:t,cache:n,stragedy:o.stragedies.CACHE_FIRST})))}if((e=>/.(html)$/.test(e.url))(t)){if(h("Static html request:",t),"navigate"===t.mode)h("Navigation fetch event:",t),e.respondWith(()=>l(void 0,void 0,void 0,(function*(){try{const n=yield e.preloadResponse;if(n)return n;const a=yield fetch(e.request),c=a.clone();return caches.open(s.STATIC_CACHE).then(e=>{e.put(t,c)}),a}catch(n){const e=yield caches.open(s.STATIC_CACHE);return yield e.match(o.offlineFallbackPage)}})));else{h("Regular fetch event:",t);const n=caches.open(s.STATIC_CACHE);e.respondWith(n.then(n=>C({event:e,request:t,cache:n,stragedy:o.stragedies.CACHE_FIRST})))}return}const n=caches.open(s.STATIC_CACHE);e.respondWith(n.then(n=>C({event:e,request:t,cache:n,stragedy:o.stragedies.CACHE_FIRST})))}),self.addEventListener(o.events.PUSH,e=>{h("Push event received:",e.data);const{title:t,options:n}=r,s=self.registration.showNotification(t,n);e.waitUntil(s)}),self.addEventListener(o.events.NOTIFY_CLICK,e=>{h("Notification has been clicked"),e.notification.close();switch(e.notification.tag){case o.push.NEW_UPDATE:e.waitUntil(self.clients.openWindow(o.baseUrl));break;default:e.waitUntil(self.clients.openWindow(o.baseUrl))}}),self.addEventListener(o.events.SYNC,e=>{switch(h("Received sync event:",e.tag),e.tag){case a.INITIAL_SYNC:e.waitUntil(new Promise(e=>e(!0)).then(e=>{h("Sync event result:",e)}));break;case a.UPDATE_SYNC:e.waitUntil((t=o.baseUrl,p(t+"/rest/api/schema",s.DATA_CACHE).then(E).then(e=>(self.registration.showNotification("New api version "+e.version),"Notification sent"))).then(e=>{h("Sync event result:",e)}));break;default:h("Received sync event:",e.tag)}var t}),self.addEventListener(o.events.PERIODIC_SYNC,e=>{switch(h("Triggered periodic sync:",e),e.tag){case a.CONTENT_SYNC:e.waitUntil(new Promise(e=>e(!0)).then(e=>{h("Sync event result:",e)}));break;default:h("Received sync event:",e.tag)}}),self.addEventListener(o.events.MESSAGE,e=>{h("Received message",e);const t=e.data;switch(t.type){case o.messages.SKIP_WAITING:self.skipWaiting();break;case o.messages.ADD_TO_CACHE:{const e=new Request(t.payload);fetch(e).then(f).then(t=>{caches.open(s.STATIC_CACHE).then(n=>n.put(e,t))}).catch(e=>{d("Something went wrong!",e)})}}});t.default=o}]);