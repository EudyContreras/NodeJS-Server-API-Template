!function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="../../build/public/",n(n.s=1)}([function(e){e.exports=JSON.parse('{"lang":"en-US","name":"React PWA Template Engine","short_name":"React Template Engine","description":"An Isomorphic react PWA template engine","orientation":"any","display":"standalone","icons":[{"src":"images/icons/touch-icon-72x72.webp","sizes":"72x72","type":"image/webp"},{"src":"images/icons/touch-icon-96x96.webp","sizes":"96x96","type":"image/webp"},{"src":"images/icons/touch-icon-120x120.webp","sizes":"120x120","type":"image/webp"},{"src":"images/icons/touch-icon-128x128.webp","sizes":"128x128","type":"image/webp"},{"src":"images/icons/touch-icon-144x144.webp","sizes":"144x144","type":"image/webp"},{"src":"images/icons/touch-icon-152x152.webp","sizes":"152x152","type":"image/webp"},{"src":"images/icons/touch-icon-180x180.webp","sizes":"180x180","type":"image/webp"},{"src":"images/icons/touch-icon-192x192.webp","sizes":"192x192","type":"image/webp"},{"src":"images/icons/touch-icon-192x192.png","sizes":"192x192","type":"image/png"},{"src":"images/icons/touch-icon-257x257.webp","sizes":"257x257","type":"image/webp"},{"src":"images/icons/touch-icon-384x384.webp","sizes":"384x384","type":"image/webp"},{"src":"images/icons/touch-icon-512x512.png","sizes":"512x512","type":"image/png"},{"src":"images/icons/touch-icon-512x512.webp","sizes":"512x512","type":"image/webp"}],"serviceworker":{"src":"service-worker.js","scope":"/"},"scope":"/","gcm_sender_id":"","gcm_user_visible_only":true,"start_url":"/?utm_source=homescreen","permissions":["gcm"],"theme_color":"#23282d","background_color":"#2f3439"}')},function(e,t,n){"use strict";n.r(t);var s=n(0);const i={DATA_CACHE:"eudcon-universal-data-cache",IMAGE_CACHE:"eudcon-universal-image-cache",STATIC_CACHE:"eudcon-universal-static-cache",FALLBACK_CACHE:"eudcon-universal-fallback-cache"},c={INITIAL_SYNC:"initial-sync",UPDATE_SYNC:"update-sync",CONTENT_SYNC:"content-sync"},a={HTML:"text/html",SVG:"image/svg+xml",IMAGE:"image/png",FONT:""},r={title:"Template engine",options:{requireInteraction:!0,body:"There is update available! Would you like to see it?",icon:"../static/images/icons/icon-152x152.png",badge:"../static/images/icons/icon-152x152.png",actions:[{title:"yes",action:"action-1"},{title:"no",action:"action-2"}]}},o=Object.freeze({CACHE_ONLY:"cache_only_stragedy",CACHE_FIRST:"cache_first_stragedy",CACHE_THEN_PRELOAD:"cache_then_preload_stragedy",NETWORK_ONLY:"network_only_stragedy",NETWORK_FIRST:"network_first_stragedy",STALE_REVALIDATE:"stale_revalidate_stragedy",UPDATE_REFRESH:"update_refresh_stragedy",NON_FOUND:"no_found_stragedy"}),l=Object.freeze({push:{NEW_UPDATE:"new-update"},http:{PUT:"PUT",POST:"POST",DELETE:"DELETE",PATCH:"PATCH"},events:{SYNC:"sync",PERIODIC_SYNC:"periodicsync",NOTIFY_CLICK:"notificationclick",INSTALL:"install",ACTIVATE:"activate",MESSAGE:"message",FETCH:"fetch",PUSH:"push"},baseUrl:"",urlsToCache:["/","https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js","https://fonts.googleapis.com/css?family=Roboto&display=optional","https://fonts.gstatic.com/s/materialicons/v48/flUhRq6tzZclQEJ-Vdg-IuiaDsNcIhQ8tQ.woff2"],stragedies:o,messages:{REFRESH:"refresh",APP_UPDATE:"add_update",READ_OFFLINE:"read_offline",SKIP_WAITING:"skip_awaitng",ADD_TO_CACHE:"add_to_cache",REMOVE_FROM_CACHE:"remove_from_cache"},cacheKeys:i,syncEvents:c,contentTypes:a,updateNotification:r});function u(e,t,n,s,i,c,a){try{var r=e[c](a),o=r.value}catch(l){return void n(l)}r.done?t(o):Promise.resolve(o).then(s,i)}function h(e){return function(){var t=this,n=arguments;return new Promise((function(s,i){var c=e.apply(t,n);function a(e){u(c,s,i,a,r,"next",e)}function r(e){u(c,s,i,a,r,"throw",e)}a(void 0)}))}}importScripts("/manifest-precache.c1b3cd50cfaab21e71eb65e73e9fa571.js","https://storage.googleapis.com/workbox-cdn/releases/4.3.1/workbox-sw.js"),self.__WB_MANIFEST;const p=(...e)=>{console.log("%c ServiceWorker ","background: #00b6ffbd; padding: 2px; border-radius: 4px; color: white; font-weight: 600;",...e)},d=function(){var e=h((function*(e=a.HTML){switch(e){case a.HTML:return(yield caches.open(i.FALLBACK_CACHE)).match("/offline.html")}}));return function(){return e.apply(this,arguments)}}(),g=(e=a.HTML)=>{switch(e){case a.IMAGE:return Promise.resolve(new Response(i.FALLBACK_CACHE,{headers:{"Content-Type":"image/svg+xml"}}))}},f=e=>{if(e.status>=200&&e.status<300||0===e.status)return e;throw new Error(e.statusText)},_=(e,t=i.DATA_CACHE)=>fetch(e).then(n=>{if(!n.ok)throw new Error("Network error");return caches.open(t).then(t=>(t.put(e,n.clone()),n)).then(e=>e)}),E=e=>e.json().then(t=>(self.clients.matchAll().then(n=>{n.forEach(n=>{n.postMessage(JSON.stringify({type:l.messages.APP_UPDATE,data:{url:e.url,payload:t.content}}))})}),t.content)),A=({event:e,request:t,cache:n,stragedy:s=l.stragedies.CACHE_FIRST,contentType:i=a.HTML})=>{switch(s){case l.stragedies.CACHE_ONLY:return n.match(t).then(()=>g(i));case l.stragedies.NETWORK_ONLY:return fetch(t).then(()=>g(i));case l.stragedies.CACHE_FIRST:return n.match(t).then(s=>s||fetch(t).then(s=>(e.waitUntil(n.put(t,s.clone())),s)).catch(()=>n.match("/offline.html")));case l.stragedies.NETWORK_FIRST:return fetch(t).then(f).then(e=>(n.put(t,e.clone()),e)).catch(()=>n.match(t).then(e=>e||d()));case l.stragedies.STALE_REVALIDATE:return n.match(t).then(e=>{const s=fetch(t).then(e=>(n.put(t,e.clone()),e));return e||s||g()});case l.stragedies.UPDATE_REFRESH:return n.match(t).then(e=>new Response(e.body)).catch(()=>fetch(t).then(e=>(n.put(t,e.clone()),e)).catch(()=>{const e=JSON.stringify({error:"ServiceWorker: Sorry, you are offline. Please, try later."});return new Response(e,{status:404,statusText:"Not Found",headers:{"Content-Type":"application/json"}})}));case l.stragedies.CACHE_THEN_PRELOAD:return caches.match(t).then(s=>s||e.preloadResponse.then(e=>e||fetch(t).then(e=>(n.put(t,e.clone()),e)).catch(()=>g())));case l.stragedies.NON_FOUND:return fetch(t).catch(()=>{const e=JSON.stringify({error:"ServiceWorker: Sorry, you are offline. Please, try later."});return new Response(e,{status:404,statusText:"Not Found",headers:{"Content-Type":"application/json"}})})}};self.addEventListener(l.events.INSTALL,e=>{p("Installed:",e),e.waitUntil(caches.open(i.STATIC_CACHE).then(e=>{const t=s.icons.map(e=>e.src),n=(self.__WB_MANIFEST||self.__precacheManifest).map(e=>e.url);return e.addAll([...l.urlsToCache,...n,...t])}).then(()=>self.skipWaiting()).catch(e=>p(e)))}),self.addEventListener(l.events.ACTIVATE,e=>{p("Activated:",e);const t=[i.STATIC_CACHE,i.DATA_CACHE,i.IMAGE_CACHE];return e.waitUntil(caches.keys().then(e=>e.filter(e=>!t.includes(e))).then(e=>Promise.all(e.map(e=>(p("Deleting cache "+e),caches.delete(e)))))),self.clients.claim()}),self.addEventListener(l.events.FETCH,e=>{const t=e.request.clone();if(0!==t.url.indexOf("http"))return;if((e=>[...Object.values(l.http)].includes(e.method)||"GET"!=e.method)(t))return void e.respondWith(A({event:e,request:t,stragedy:l.stragedies.NON_FOUND}));if((e=>e.url.includes("/api/"))(t)){const n=caches.open(i.DATA_CACHE);return e.respondWith(n.then(n=>A({event:e,request:t,cache:n,stragedy:l.stragedies.UPDATE_REFRESH}))),void e.waitUntil(_(t).then(E))}if((e=>/.(png|svg|json|jpg|jpeg|gif|ico|css|js)$/.test(e.url))(t)){const n=caches.open(i.STATIC_CACHE);return void e.respondWith(n.then(n=>A({event:e,request:t,cache:n,stragedy:l.stragedies.CACHE_FIRST})))}if((e=>/.(html)$/.test(e.url))(t)){if(p("Static html request:",t),"navigate"===t.mode)p("Navigation fetch event:",t),e.respondWith(h((function*(){const n=new URL(t.url);n.search="";const s=fetch(n.toString()),c=s.then(e=>e.clone());return e.waitUntil(h((function*(){const e=yield caches.open(i.STATIC_CACHE);yield e.put(n.toString(),yield c)}))),(yield caches.match(n.toString()))||s})));else{p("Regular fetch event:",t);const n=caches.open(i.STATIC_CACHE);e.respondWith(n.then(n=>A({event:e,request:t,cache:n,stragedy:l.stragedies.CACHE_FIRST})))}return}const n=caches.open(i.STATIC_CACHE);e.respondWith(n.then(n=>A({event:e,request:t,cache:n,stragedy:l.stragedies.CACHE_FIRST})))}),self.addEventListener(l.events.PUSH,e=>{p("Push event received:",e.data);const{title:t,options:n}=r,s=self.registration.showNotification(t,n);e.waitUntil(s)}),self.addEventListener(l.events.NOTIFY_CLICK,e=>{p("Notification has been clicked"),e.notification.close();switch(e.notification.tag){case l.push.NEW_UPDATE:e.waitUntil(self.clients.openWindow(l.baseUrl));break;default:e.waitUntil(self.clients.openWindow(l.baseUrl))}}),self.addEventListener(l.events.SYNC,e=>{switch(p("Received sync event:",e.tag),e.tag){case c.INITIAL_SYNC:e.waitUntil(new Promise(e=>e(!0)).then(e=>{p("Sync event result:",e)}));break;case c.UPDATE_SYNC:e.waitUntil((t=l.baseUrl,_(t+"/rest/api/schema",i.DATA_CACHE).then(E).then(e=>(self.registration.showNotification("New api version "+e.version),"Notification sent"))).then(e=>{p("Sync event result:",e)}));break;default:p("Received sync event:",e.tag)}var t}),self.addEventListener(l.events.PERIODIC_SYNC,e=>{switch(p("Triggered periodic sync:",e),e.tag){case c.CONTENT_SYNC:e.waitUntil(new Promise(e=>e(!0)).then(e=>{p("Sync event result:",e)}));break;default:p("Received sync event:",e.tag)}}),self.addEventListener(l.events.MESSAGE,e=>{p("Received message",e);const t=e.data;switch(t.type){case l.messages.ADD_TO_CACHE:{const e=new Request(t.payload);fetch(e).then(f).then(t=>{caches.open(i.STATIC_CACHE).then(n=>n.put(e,t))})}}});t.default=l}]);